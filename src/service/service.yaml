openapi: "3.0.2"
info:
  title: User Management
  version: "1.0"
servers:
  - url: https://api.server.test/v1
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML
      responses:
        "200":
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithId'
      responses:
        "201":
          description: Created
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to return.
          schema:
            $ref: '#/components/schemas/userId'
      responses:
        "200":
          description: A user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithId'
        "400":
          description: The specified user ID is invalid (not a number).
        "404":
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
    delete:
      summary: Deletes a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to delete.
          schema:
            $ref: '#/components/schemas/userId'
      responses:
        "204":
          description: User was successfull deleted
        "404":
          description: User coudn't be found
components:
  schemas:
    userId:
      type: string
      minimum: 1
    UserWithId:
      properties:
        id:
          type: string
        forname:
          type: string
        surname:
          type: string
      # Both properties are required
      required:
        - id
        - forname
        - surname
